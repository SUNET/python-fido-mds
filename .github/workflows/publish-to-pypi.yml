name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on:
  schedule:
    - cron: '0 2 15 * *'  # Run at 02:00 UTC on the 15th of every month
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0  # Fetch all history for proper versioning

    - name: Set version for scheduled release
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: |
        # Create version string: YYYY.MM (e.g., 2025.10)
        VERSION=$(date -u +"%Y.%-m")
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "Creating version: ${VERSION}"
        sed -i "s/^version = .*/version = \"${VERSION}\" pyproject.toml
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build and uv
      run: |
        python3 -m pip install uv --user
        uv venv
        uv pip install build
    - name: Update FIDO metadata and root certs
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: |
        uv pip install -r scripts/requirements.txt
        make update_package_data
    - name: Build a binary wheel and a source tarball
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: make build
    - name: Store the distribution packages
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    if: github.event_name == 'schedule'  # publish on schedule
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/fido-mds
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python üêç distribution üì¶ with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: gh release upload "$GITHUB_REF_NAME" dist/** --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/fido-mds

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
